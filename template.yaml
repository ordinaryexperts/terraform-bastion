AWSTemplateFormatVersion: 2010-09-09

Parameters:
  Active:
    Default: true
    Type: String
    AllowedValues: [true, false]

  Ami:
    Type: AWS::EC2::Image::Id

  Env:
    Type: String

  InstanceType:
    Type: String
    Default: t2.micro

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName

  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>

  VpcId:
    Type: AWS::EC2::VPC::Id

Conditions:
  IsActive:
    !Equals [true, !Ref Active]

Resources:

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Bastion Security Group
      SecurityGroupIngress:
        -
          CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId: !Ref VpcId

  BastionAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref PublicSubnets
      LaunchConfigurationName: !Ref BastionLaunchConfiguration
      MinSize: !If [IsActive, 1, 0]
      MaxSize: !If [IsActive, 1, 0]
      DesiredCapacity: !If [IsActive, 1, 0]
      Tags:
        - Key: Name
          Value: !Sub bastion_${Env}
          PropagateAtLaunch: true
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true

  BastionLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      ImageId: !Ref Ami
      SecurityGroups: [!Ref BastionSecurityGroup]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName

Outputs:

  BastionSecurityGroup:
    Value: !Ref BastionSecurityGroup
